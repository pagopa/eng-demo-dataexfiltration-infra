resource "azurerm_key_vault_key" "disk_enc" {
  name         = "${local.project}-enc-set-key"
  key_vault_id = module.key_vault.id
  key_type     = "RSA"
  key_size     = 2048

  key_opts = [
    "decrypt",
    "encrypt",
    "sign",
    "unwrapKey",
    "verify",
    "wrapKey",
  ]
}

resource "azurerm_disk_encryption_set" "pci_enc_set" {
  name                = "${local.product}-${var.domain}-enc-set"
  resource_group_name = azurerm_resource_group.sec_rg.name
  location            = azurerm_resource_group.sec_rg.location
  key_vault_key_id    = azurerm_key_vault_key.disk_enc.id

  identity {
    type = "SystemAssigned"
  }
}

resource "azurerm_key_vault_access_policy" "enc-disk" {
  key_vault_id = module.key_vault.id

  tenant_id = azurerm_disk_encryption_set.pci_enc_set.identity.0.tenant_id
  object_id = azurerm_disk_encryption_set.pci_enc_set.identity.0.principal_id

  key_permissions = [
    "Create",
    "Delete",
    "Get",
    "Purge",
    "Recover",
    "Update",
    "List",
    "Decrypt",
    "Sign"
  ]
}

/* resource "azurerm_key_vault_access_policy" "enc-user" {
  key_vault_id = module.key_vault.id

  tenant_id = data.azurerm_client_config.current.tenant_id
  object_id = data.azurerm_client_config.current.object_id

  key_permissions = [
    "Create",
    "Delete",
    "Get",
    "Purge",
    "Recover",
    "Update",
    "List",
    "Decrypt",
    "Sign"
  ]
} */

resource "azurerm_role_assignment" "enc-disk" {
  scope                = module.key_vault.id
  role_definition_name = "Key Vault Crypto Service Encryption User"
  principal_id         = azurerm_disk_encryption_set.pci_enc_set.identity.0.principal_id
}